kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: pic
  name: data-claim-registry
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: pic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
        - name: registry
          image: registry:2.6.2
          env:
            - name: REGISTRY_HTTP_SECRET
              value: azerty
            - name: REGISTRY_HTTP_ADDR
              value: ":5000"
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          ports:
          - name: http
            containerPort: 5000
          volumeMounts:
          - name: image-store
            mountPath: "/var/lib/registry"
      volumes:
      - name: image-store
        hostPath:
          path: /srv/registry
      volumes:
        - name: image-store
          persistentVolumeClaim:
            claimName: data-claim-registry
---
apiVersion: v1
kind: Service
metadata:
  namespace: pic
  name: registry
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 5000
      targetPort: 5000
  selector:
    app: registry
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: pic
  name: registry
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - secretName: registry-tls
    hosts:
      - registry.35.193.56.167.nip.io
  rules:
  - host: registry.35.193.56.167.nip.io
    http:
      paths:
      - path: /*
        backend:
          serviceName: registry
          servicePort: 5000
